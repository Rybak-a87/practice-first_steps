# Стандартные функции в Python


#--------------------------------------------------------
'''Раздел 3 (1 Математические функции)
1) Выведите число, округлив его до 2 знаков после запятой.
2) Выведите с шагом в 1 градус все значения синуса угла
    от 0 до 180 градусов в таком виде: «sin(УГОЛ_В_ГРАДУСАХ) = РЕЗУЛЬТАТ».
Примечание: разумеется, стоит использовать цикл.
'''


def lesson_1():
    a = 54.325745
    print(round(a, 2))#округление до сотых(до 2го знака после запятой)
    import math
    for i in range(1, 181):
        s = math.sin(math.radians(i)) #вычисление синуса по градусам
        print(f"Синус угла {i} град. - рабен: {s}")


#--------------------------------------------------------
'''Раздел 3 (2 Строковые функции)
1) Попросите пользователя ввести произвольную строку.
2) Выведите коды всех символов строки, введённой пользователем.
3) Попросите пользователя ввести строку, состоящую только из цифр.
4) Используя соответствующую функцию, проверьте введённую пользователем
    строку, и если он ввёл правильно, то написать «Спасибо!», иначе
    выбросить исключение, в обработке которого вывести строку
    «Некорректный ввод!».
'''


def lesson_2():
    s = input("Введите произвольную строку: ")
    for i in s:
        print(f"Код cимвола {i} - {ord(i)}")
    a = input("Введите строку состоящюю только их цифр: ")
    if a.isdigit():
        print("Спасибо!")
    else:
        print("Некорректный ввод!")


#--------------------------------------------------------
'''Раздел 3 (3 Функции для работы со списками и кортежами)
1) Попросите пользователя указать, какое количество элементов надо
    создать в списке.
2) Сделайте цикл на соответствующее число итераций, в каждой из
    которых просите пользователя ввести число в таком формате:
    «Введите число N:», где N – текущий номер числа.
3) Добавляйте каждое это число в список.
4) По завершению цикла выведите получившийся список.
'''


def lesson_3():
    l = []
    a = int(input("Какое колличество элементов должен содержать список: "))
    for i in range(a):
        b = int(input(f"Ведите {i + 1}-й элемент списка: "))
        l.append(b)
    print(f"Созданный Вами список: {l}")


#--------------------------------------------------------
'''Раздел 3 (4 Функции для работы с множествами)
1) Создайте 2 множества, состоящие из 10 случайных целых чисел
    от 1 до 10 (включая 1 и 10).
2) Выведите 3 множества: объединением этих двух множеств,
    их разницей и их пересечением.
'''


def lesson_4():
    set1 = {10, 6, 5, 4, 7}
    set2 = {9, 5, 1, 3, 6}
    set3 = set1.union(set2) #объеденение
    set4 = set1.difference(set2) #элементы которые не пересекаются
    set5 = set1.intersection(set2) #пересечение (одинаковые элементы)
    print(f"Объеденение множества {set1} и {set2} - результат: {set3}")
    print(f"Не пересекающиеся элементы множества {set1} и {set2} - результат: {set4}")
    print(f"Пересекающиеся элементы множества {set1} и {set2} - результат: {set5}")


#--------------------------------------------------------
'''Раздел 3 (5 Функции для работы со словарями)
1) Создайте словарь из 3-х ключей «Hello», «Bуe» и «Lesson» и
    значениями соответственно «Здравствуй», «Пока» и «Урок».
2) В бесконечном цикле выводите случайное значение из словаря
    и просите пользователя написать перевод на английском.
3) Проверяйте на соответствие введённой пользователем строки
    и ключа словаря. Если пользователь ввёл всё правильно,
    то выводить ему следующее слово. Если неправильно,
    то сообщать ему об этом, и заново ждать от него уже
    другого ответа. И так до тех пор, пока он не введёт правильный ответ.
4) Если пользователь вводит команду «show», то вывести словарь.
5) Если пользователь вводит «quit», то завершать программу.
Примечание: не забывайте, что если пользователь будет писать,
    например: «hello», «Hello» или «HELlo» - то это всё считать
    правильными ответами.
'''


def lesson_5():
    import random
    d = {"Window": "Окно"}
    d.setdefault("Hello", "Здравствуй") #добавление ключ-значение в словарь
    d.setdefault("Bye", "Пока")
    d["Lesson"] = "Урок" #добавление ключ-значение в словарь
    d["Red"] = "Красный"
    while True:
        v = random.choice(tuple(d.items())) #случайная пара из словаря переведенная в кортеж
        print('Для вывода перевода введите - "Show"\nДля выхода из программы введите - "Quit"')
        while True:
            a = input(f'Как по английски будет - "{v[1]}" :').lower()
            if "quit" in a: #выход из программы
                exit(0)
            elif "show" in a: #выводит перевод
                print(f'"{v[1]}" по английски - {v[0]}')
                break
            elif a in str(v[0]).lower():
                print("Отлично.")
                break
            else:
                print("Не верно.")


#--------------------------------------------------------
'''Раздел 3 (6 Функции для работы с файлами)
1) Попросите пользователя ввести команду «read» или «copy».
2) Попросите у пользователь ввести путь к файлу, содержимое которого
    он хочет посмотреть, либо скопировать. Причём, если пользователь
    ввёл до этого «read», то надо написать: «Напишите путь к файлу,
    содержимое которого Вы хотите посмотреть:». А если была команда «write»,
    то: «Напишите путь к файлу, который Вы хотите скопировать:»
3) Если была команда «read», то вывести пользователю содержимое файла.
4) Если была команда «write», то сделайте копию файла. Копия файла должна
    называться так же, как и исходный файл, и находиться она должна в
    директории files, находящейся в той же директории, что и файл скрипта.
Примечание: будьте аккуратны и не очистите какие-нибудь важные файлы в
    процессе экспериментов. Создайте лучше какой-нибудь новый файл для этой задачи.
'''


def lesson_6():
    inp = input("Введите команду «read» или «copy»: ")
    if inp in "read":
        a = input("Напишите путь к файлу, содержимое которого Вы хотите посмотреть: ").lower()
        a = f"course/section3_standard_functions/{a}"
        file = open(a, "r", encoding="utf-8")
        print(file.read())
        file.close()
    elif inp in "copy":
        a = input("Напишите путь к файлу, который Вы хотите скопировать:").lower()
        file = open(a, "r")
        r = file.read()
        file.close()
        file2 = open(f"course/section3_standard_functions/copy_files/{a}", "w")
        file2.write(r)
        file2.close()
    else:
        print("Не верная команда.")
        exit(0)


#--------------------------------------------------------
'''Раздел 3 (7 Функции для работы с датой и временем)
1) Попросите пользователя ввести 3 числа: год, месяц и число рождения.
2) Напишите ему, сколько секунд он уже живёт.
'''


def lesson_7():
    import datetime as dt
    import time as t
    print("Ваша дата рождения")
    d = int(input("Введите число: "))
    m = int(input("Введите месяц: "))
    y = int(input("Введите год: "))
    dateb = dt.datetime(y, m, d, 00, 00, 00)
    dtbsec = dt.datetime.timestamp(dateb)
    dtnsec = dt.datetime.timestamp(dt.datetime.today())
    dtmysec = dtnsec - dtbsec
    print(f"Вы живете: {dtmysec} секунд")

    
#--------------------------------------------------------
