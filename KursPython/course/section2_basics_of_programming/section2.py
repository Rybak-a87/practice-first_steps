# Основы программирования на Python


# --------------------------------------------------------
"""Раздел 2 (1 Hello, world!)
1) Выведите с помощью двух функций print два предложения: «Я прохожу курс по Python»
    и «Я учу Python по курсу: ‘Программирование на Python с Нуля до Гуру’».
2) Выведите с помощью только одного вызова функции print два предложения из предыдущего
    пункта, причём после первого предложения должен быть переход на новую строку.
"""


def lesson_1():
    print("Я прохожу курс по Python")   # вывод строки в косоль
    print("Я учу Python по курсу: 'Программирование на Python с Нуля до Гуру'")   # вывод строки в косоль
    print("Я прохожу курс по Python\nЯ учу Python по курсу: ‘Программирование на Python с Нуля до Гуру’")   # вывод строки в косоль на две строки


# --------------------------------------------------------
"""Раздел 2 (2 Переменные и их типы)
1) Создайте переменную со значением 10.
2) Выведите данную переменную с помощью функции print().
3) Измените значение переменной на 15.
4) Выведите значение переменной в таком виде: «Значение переменной ИМЯ_ПЕРЕМЕННОЙ равно ЗНАЧЕНИЕ_ПЕРЕМЕННОЙ».
    То есть должно получиться примерно так: «Значение переменной abc равно 15».
5) Создайте 2 строковые переменные со значениями: «Значение переменной» и «равно».
6) Выведите аналогичную строку из пункта 4, но с использованием переменных из пункта 5.
7) Создайте 2 булевских переменных со значениями: True и False.
8) Выведите их так, как написано в 6 пункте (то есть с использованием строковых переменных).
"""


def lesson_2():
    a = 10   # тип int
    print(a)   # выводит на экран переменную а
    a = 15   # тип int
    print(f"Значение переменной a равно {a}")   # выводит на экран переменную а с текстом
    s = "Значение переменной"   # тип str
    t = "равно"   # тип str
    print(f"{s} a {t} {a}")   # выводит на экран переменную s t а преобразуя их в текст
    d = True   # тип bool
    f = False   # тип bool
    print(f"{s} d {t} {d}")   # выводит на экран переменную s t d преобразуя их в текст
    print(f"{s} f {t} {f}")   # выводит на экран переменную s t f преобразуя их в текст
    print(f"{s} d {t} " + str(d))   # выводит на экран переменную s t d преобразуя их в текст а переменную d в тип (str)


# --------------------------------------------------------
"""Раздел 2 (3 Коментарии)
1) Прокомментируйте каждую строчку кода из предыдущего упражнения.
"""
#--------------------------------------------------------
"""Раздел 2 (4 Арифметические операции)
1) Создайте 2 числовые переменные со значениями на Ваш выбор.
2) Выведите через print() результат: суммы, разности, произведения, остатка от деления, получение целой части при делении, возведении в степень этих чисел.
3) С помощью print() посчитайте, чему равно значение следующего выражения: ((15 * 10 – 20) / 2) + 14 * 10 + (-45)
4) Создайте переменную, в которую запишите значение одного из чисел в двоичной системе счисления.
5) Выведите эту переменную.
"""


def lesson_4():
    a = 12   # переменная int
    b = 3   # переменная int
    s = a + b   # сумма двух переменных
    r = a - b   # разность двух переменных
    p = a * b   # произведение двух переменых
    d = a / b   # делитель двух переменных
    o = a % b   # деление по остатку
    c = a // b   # деление без остатка
    print("a + b =", s)   # выводит сумму
    print("a - b =", r)   # выродит разность
    print("a * b =", p)   # выводит произведение
    print("a / b =", d)   # выводит делитель
    print("a % b =", o)   # выводит деления по остатку
    print("a // b =", c)   # выводит деление без остатка
    print((15 * 10 - 20/ 2) + 14 * 10 + (-45), "(решение в строке)")
    res = (15 * 10 - 20/ 2) + 14 * 10 + (-45)
    print(res, "(c помощью переменной)")
    dv = bin(23)   # перевот числа в двоичную систему
    print(f"23 в двоичной системе счисления: {dv}")


# --------------------------------------------------------
"""Раздел 2 (5 Догические операции)
1) Самостоятельно подумайте, чему будет равно следующее логическое выражение:
    True and (True or (False and True or False) and True or True != False)
2) Проверьте себя, выведя результат этого выражения с помощью функции print().
3) Самостоятельно подумайте, чему будет равно следующее логическое выражение:
    15 > 20 or (5 < 7 and 8 > 12 or 12 >= 12 and 15 < 18)
4) Проверьте себя, выведя результат данного выражения с помощью функции print().
"""


def lesson_5():
    b = True and (True or (False and True or False) and True or True != False)
    print(f"Я просчитал в уме, получилось: True\nА Python говорит что: {b}")
    print("----------------------------")
    b2 = 15 > 20 or (5 < 7 and 8 > 12 or 12 >= 12 and 15 < 18)
    print(f"Я просчитал в уме, получилось: True\nА Python говорит что: {b2}")


# --------------------------------------------------------
"""Раздел 2 (6 Строковые операции(str))
1) Попросите пользователя ввести 3 числа.
2) Выведите пользователю среднее арифметическое этих чисел.
    Примечание: среднее арифметическое чисел
    равно сумме этих чисел поделённое на их количество.
"""


def lesson_6():
    a = input("Введите первое число: ")   # ввод строки типа str
    b = int(input("Введите второе число: "))   # ввод чиста типа int (целое число)
    c = float(input("Введите третье число: "))   # ввод числа типа float (с плавающей точкий)
    res = (int(a) + b + c) / 3   # вычисление среднего арифметического (переврд переменной а в тип int)
    print(f"Cреднее арифметическое чисел {a}, {b} и {c} равно: {res}")


# --------------------------------------------------------
"""Раздел 2 (7 Условные операции)
1) Попросите пользователя ввести 2 числа.
2) Сохраните в переменную результат деления первого числа на второе 
    при условии, что делитель не равен 0. Если делитель равен 0, то сохранить 
    в переменную строку: «бесконечность».
3) Вывести пользователю ответ в таком виде: «ЧИСЛО_1 / ЧИСЛО_2 = ОТВЕТ».
    Примечание: разумеется, вместо «ЧИСЛО_1», «ЧИСЛО_2» и «ОТВЕТ» должны быть 
    подставлены соответствующие переменные.
"""


def lesson_7():
    print("Деление первого числа на второе.")
    a = float(input("Ведите первое число : "))   # ввод числа типа float
    b = float(input("Введите второе число : "))   # ввод числа типа float
    if b == 0:   # проверка, введен ли ноль
        c = "Бесконечность"
    else:   # вычисление, если ноль не введен
        c = a / b
    print(f"{a} / {b} = {c}")   # вывод результата


# --------------------------------------------------------
"""Раздел 2 (8 Цикл while)
1) Напишите программу, которая будет принимать числа от пользователя и суммировать
    их, пока он не напишет слово «sum».
2) Когда пользователь напишет слово «sum», должна быть выведена сумма всех чисел и
    начат процесс заново.
3) Если пользователь напишет «exit» или «quit», программа должна быть завершена.
"""


def lesson_8():
    res = 0
    sum = "sum"
    q = ("quit", "exit")
    while True:
        a = input("Введите число: ")
        if a in sum:
            print(f"Сумма введенных чисел состовляет: {res}")
            res = 0
            continue
        elif a in q:
            print("Программа завершена.")
            # break   # выход из цикла
            exit(0)   # Выход из программы (завершение программы)
        else:
            res += float(a)


#--------------------------------------------------------
'''Раздел 2 (9 Массивы (списки(list)))
1) Создайте список, состоящий из строк.
2) Выведите все элементы списка в таком виде: «ИНДЕКС_ЭЛЕМЕНТА – ЭЛЕМЕНТ;»
3) Попросите пользователя ввести индекс того элемента, значение которого он 
    хочет посмотреть.
4) Выведите значение элемента по индексу, полученному от пользователя.
    Примечание: если пользователь ввёл индекс, которого нет, то написать 
    ему об этом так: «Элемента с таким индексом не существует».
'''


def lesson_9():
    l = ["a", "b", "c", "d", "e", "f", "g"]
    #for i in range(len(l)):  #1
    i = 0 #2
    while i < len(l): #2
        print(f"Индекс элемента списка {i} - это элемент {l[i]}")
        i += 1 #2
    print(f"Есть список: {l}")
    a = int(input("Введите индекс элемента списка, который вы хотите увидеть: "))
    if 0 <= a < len(l): # a >= 0 and a < len(l)
        print(f"Элемент с индексом {a} - это {l[a]}")
    else:
        print("Элемента с таким индексом не существует.")


#--------------------------------------------------------
'''Раздел 2 (10 Цикл for и генераторы списков)
1) Создайте список из 5 чисел.
2) Определите сумму чисел в списке и выведите её.
3) Определите среднее арифметическое чисел в списке и выведите его.
    Примечание: при выполнении заданий используйте цикл for.
'''


def lesson_10():
    #l = [1, 2, 3, 4, 5] #1
    sum = 0
    #sa = 0 #3
    #l = [n for n in (range(1, 6))] #4
    l = list(range(1, 6)) #2
    for i in l:
        sum += i
        #sa = (sa + i) / len(l) #3
    sa = sum / len(l)
    print(f"Сумма чисел в списке {l} равна: {sum}")
    print(f"Cреднее арифметическое чисел в списке {l} равна: {sa}")


#--------------------------------------------------------
'''Раздел 2 (11 Множества(set))
1) Попросите пользователя ввести количество элементов для списка.
2) Создайте список, состоящий из целых случайных чисел от 0 до 100, 
    заданного пользователем количества.
3) Выведите этот список с помощью цикла while.
4) С помощью множеств удалите из списка все повторяющиеся значения.
5) Выведите получившийся список с помощью цикла for.
'''


def lesson_11():
    import random
    k = int(input("Введите необходимое количество элементов для создания списка: "))
    print("--------------------------------------------------")
    #l = [int(random.random() * 100) for i in range(k)] #1
    l = [random.randint(0, 100) for i in range(k)] #2
    w = 0
    while w < k:
        print(f"{w + 1}й элемент списка с индексом {w}: {l[w]}") #1
        w += 1
    s = set(l)
    lu = list(s)
    print("--------------------------------------------------")
    print("Обработанный список, без повторяющихся элементов и в разброс:")
    for i in range(len(lu)):
        print(f"{i + 1}й элемент списка: {lu[i]}")


#--------------------------------------------------------
'''Раздел 2 (12 Кортежи(tuple))
1) Попросите пользователя ввести произвольную строку.
2) Создайте кортеж, состоящий из символов, введённой пользователем строки.
3) Выведите кортеж, используя цикл for.
'''


def lesson_12():
    a = input("Введите произвольную строк: ")
    t = tuple(a)
    print(f"Получился такой кортеж: {t}")
    for i in range(len(t)):
        print(f"{i + 1}й элемент кортежа с индексом {i}: {t[i]}")


#--------------------------------------------------------
'''Раздел 2 (13 Словари(dict))
1) Создайте словарь с двумя ключами «Name» и «Age» и значениями «Без имени» и «-1».
2) Попросите пользователя ввести своё имя.
3) Попросите пользователя ввести свой возраст.
4) Примите эти данные и измените соответствующие элементы словаря.
5) Выведите этот словарь (ключи и значения), используя цикл for.
'''


def lesson_13():
    d = {"name": "без имени", "age": -1}
    n = input("Введите свое имя: ")
    a = input("Введите свой возраст: ")
    d["name"] = n
    d["age"] = a
    for key in d:
        print(f"Ключ: {key} - значение ключа: {d[key]}")


#--------------------------------------------------------
'''Раздел 2 (14 функции)
1) Создайте функцию, которая проверяет чётное число передано в параметре 
    или нет. Она должна возвращать True или False.
2) Создайте функцию, которая принимает список и возвращает максимальное 
    значение из списка.
3) Создайте функцию с переменным числом аргументов, внутри которой должно 
    выводиться среднее арифметическое переданных чисел.
    Примечание: среднее арифметическое чисел равно сумме этих чисел поделённое 
    на их количество.
'''


def lesson_14_1(x):
    if x % 2 == 0:
        return True
    else:
        return False


def lesson_14_2(l):
    max = l[0]
    for i in l:
        if i > max:
            max = i
    print(f"Максимальное число списка {l} - является: {max}")


def lesson_14_3(*arg):
    s = 0
    for i in arg:
        s += i
    res = s / len(arg)
    print(f"Среднее арифметическое заданных в функцию чисел {arg} - равно: {res}")


#--------------------------------------------------------
'''Раздел 2 (15 Глобальные переменные)
1) Создайте переменную со значением числа пи: «3.141592».
2) Напишите функцию, которая будет возвращать площадь окружности по переданному 
    в параметре радиусу.
3) Проверьте работу функции.
    Примечание: площадь окружности = пи * радиус * радиус. Значение числа пи надо 
    взять из глобальной переменной, созданной в первом пункте.
'''


#pi = 3.141592 #глобальная переменная
def lesson_15(r):
    s = pi * r ** 2 #1
    #s = pi * r * r #2
    return s


#--------------------------------------------------------
'''Раздел 2 (16 Модули)
1) Создайте свой модуль и подключите его в основном файле.
2) Напишите в модули 3 функции, каждая из которых принимает список. Первая 
    функция – получение максимального значения, вторая – получение минимального 
    значения, третья – получение суммы всех элементов.
3) Проверьте работу этих функций в основном файле.
'''


def lesson_16_1(a):
    max = a[0]
    for i in a:
        if i > max:
            max = i
    print(f"Максимальное значение среди {a} - является: {max}")


def lesson_16_2(a):
    min = a[0]
    for i in a:
        if i < min:
            min = i
    print(f"Минимальное значение среди {a} - является: {min}")


def lesson_16_3(a):
    sum = 0
    for i in a:
        sum += i
    print(f"Сумма всех элементов списка {a} - равна: {sum}")


#--------------------------------------------------------
'''Раздел 2 (17 Исключения)
1) Узнайте, какое исключение появляется при делении числа на 0.
2) Попросите пользователя ввести 2 числа.
3) Выведите результат деления.
4) Перехватите исключение при делении на 0 и выведите пользователю в 
    качестве результата слово «бесконечность».
'''


def lesson_17():
    print("Деление первого числа на второе.")
    try:
        a = float(input("Введите первое число: "))
    except ValueError:
        print(f"Ввод не коректный, не является числом.")
        exit(0)
    try:
        b = float(input("Введите второе число: "))
    except ValueError:
        print(f"Ввод не коректный, не является числом.")
        exit(0)
    try:
        c = a / b
    except ZeroDivisionError:
        c = "бесконечность"
    print(f"Результат деления {a} на {b} - равен: {c}")


#--------------------------------------------------------
'''Раздел 2 (18 Выполнение команд)
1) Откройте командную строку в своей системе.
2) Узнайте, с помощью какой команды можно получить текущую дату, используя 
    команду help, либо документацию к своей ОС.
3) Напишите программу, которая выполняет эту команду и выводит результат с 
    помощью функции print().
'''


def lesson_18():
    import subprocess
    import io
    sp = subprocess.Popen(["date"], stdout=subprocess.PIPE, shell=True)
    out = io.TextIOWrapper(sp.stdout, encoding="cp866")
    s = " "
    while s:
        s = out.readline()
        print(s)
    #import os #1
    #os.system("date") #1


#--------------------------------------------------------
'''Раздел 2 (19 Отладка)
1) Создайте список из 5 чисел.
2) Напишите функцию, которая находит все отрицательные числа и выводит их.
3) С помощью отладки пройдите все шаги выполнения программы, анализируя 
    значения всех переменных.
'''


def lesson_19(l):
    print(f"Выводим отрицательные числа списка {l}")
    for i in range(len(l)):
        if l[i] < 0:
            print(f"Число: {l[i]}, его индекс: {i}")
    for i in l:
        if i < 0:
            print(f"Число: {i}")

            
#--------------------------------------------------------

